plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version '0.9.4'
}

ext {
	set('springBootVersion', '3.2.3')
}

group = 'lab.solva'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://repo.spring.io/milestone'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra:3.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'net.devh:grpc-server-spring-boot-starter:2.15.0.RELEASE'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.google.protobuf:protobuf-java:3.25.3'
	implementation 'org.flywaydb:flyway-core'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:15.1.0'
	implementation 'com.graphql-java-kickstart:graphql-java-servlet:15.1.0'
	implementation 'com.graphql-java-kickstart:graphql-java-tools:13.1.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.apache.logging.log4j:log4j-core'
	testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.3'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.62.2'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}