version: '3.9'
services:
  db_cassandra:
    # build:
    #   context: .
    #   dockerfile: docker_cassandra/Dockerfile
    image: bruslanb/cassandra-image:latest # use image from git hub
    container_name: db-nosql-cassandra-server-container
    environment:
      - CASSANDRA_KEYSPACE=my_keyspace
      - CASSANDRA_LOCAL_DATACENTER=datacenter1
      - CASSANDRA_SEEDS= # it needs only IP-address
      - CASSANDRA_LISTEN_ADDRESS=db_cassandra
      - CASSANDRA_BROADCAST_ADDRESS=db_cassandra
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
      - CASSANDRA_BROADCAST_RPC_ADDRESS=db_cassandra
    ports:
      - '9043:9042'
    volumes:
      - ./data/cassandra:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh db_cassandra 9042 -e 'describe keyspaces;'"]
      interval: 10s
      timeout: 20s
      retries: 10

  db_postgres:
    # build:
    #   context: .
    #   dockerfile: docker_postgres/Dockerfile
    image: bruslanb/postgres:alpine # use image from git hub
    container_name: db-pg-sql-server-container
    environment:
      POSTGRES_DB: transaction_new_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5440:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    # build:
    #   context: .
    #   dockerfile: docker_app/Dockerfile
    image: bruslanb/app-user-transaction-new-image:1.0.1 # use image from git hub
    container_name: app-user-transaction-new-container
    user: '1001:1001' # specify the UID and GID of the user you want to run the container as
    depends_on:
      db_cassandra:
        condition: service_healthy
      db_postgres:
        condition: service_healthy
    environment:
      - SERVER_PORT=8000
    ports:
      - '8080:8000'
      - '9090:9090'
    volumes:
      - ./build:/app/build